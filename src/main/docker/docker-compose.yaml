version: '2'
name: restaurant
services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '29092:29092'
    volumes:
      - /c/temp/kafka-vol:/bitnami/kafka
    environment:
      - KAFKA_ENABLE_KRAFT=true #default
      - ALLOW_PLAINTEXT_LISTENER=yes #default
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL_SAME_HOST://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER #used by Kraft not to be included in the advertised listeners
      - BITNAMI_DEBUG=true
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080" # http://localhost:8090 to reach the Kafka gui
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: restaurant-user
      POSTGRES_PASSWORD: restaurant-password
      POSTGRES_DB: restaurant
    volumes:
      - /c/temp/postgres-restaurant-vol:/var/lib/postgresql/data
#volumes:
# this volume should be created externally in Docker
# docker volume create my-vol
# docker volume inspect my-vol
#  kafka-vol:
#    external: true